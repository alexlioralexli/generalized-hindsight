No personal conf_private.py found.
doodad not detected
2022-06-05 21:48:14.098852 EDT | Variant:
2022-06-05 21:48:14.099083 EDT | {
  "seed": 1,
  "algorithm": "DIAYN",
  "env_name": "AntEnv",
  "algo_kwargs": {
    "batch_size": 128,
    "num_epochs": 2,
    "num_eval_steps_per_epoch": 0,
    "num_expl_steps_per_train_loop": 1000,
    "num_trains_per_train_loop": 100,
    "min_num_steps_before_training": 1000,
    "max_path_length": 1000,
    "num_train_loops_per_epoch": 1
  },
  "trainer_kwargs": {
    "discount": 0.99,
    "soft_target_tau": 0.005,
    "target_update_period": 1,
    "policy_lr": 0.003,
    "qf_lr": 0.003,
    "reward_scale": 1,
    "use_automatic_entropy_tuning": true
  },
  "replay_buffer_kwargs": {
    "max_replay_buffer_size": 5000000.0,
    "latent_dim": 1,
    "approx_irl": true,
    "add_random_relabeling": false,
    "cem": false,
    "plot": false
  },
  "relabeler_kwargs": {
    "relabel": true,
    "use_adv": false,
    "skill_dim": 4,
    "alg": "DIAYN",
    "n_sampled_latents": 5,
    "n_to_take": 1,
    "cache": true
  },
  "qf_kwargs": {
    "hidden_sizes": [
      256,
      256
    ],
    "latent_shape_multiplier": 1,
    "latent_to_all_layers": false
  },
  "policy_kwargs": {
    "hidden_sizes": [
      256,
      256
    ],
    "latent_shape_multiplier": 1,
    "latent_to_all_layers": false
  },
  "path_collector_kwargs": {
    "save_videos": false
  },
  "use_advantages": false,
  "proper_advantages": true,
  "plot": false,
  "test": false,
  "gpu": 0,
  "mode": "here_no_doodad",
  "local_docker": false,
  "insert_time": false,
  "latent_shape_multiplier": 1,
  "env_kwargs": {
    "use_xy": true,
    "contact_forces": true
  },
  "gpu_id": 0
}
/ext3/pytorch_sac/lib/python3.6/site-packages/gym/spaces/box.py:74: UserWarning: [33mWARN: Box bound precision lowered by casting to float32[0m
  "Box bound precision lowered by casting to {}".format(self.dtype)
/home/yb1025/Research/GRAIL/HUSK/accelerate-skillDiscovery/generalized-hindsight/rlkit/data_management/task_relabeling_replay_buffer.py:654: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  "relabeled_latents": np.array(self.relabeled_latents),
workspace: /home/yb1025/Research/GRAIL/HUSK/accelerate-skillDiscovery/generalized-hindsight/husk_job_scripts/exp/2022.06.05/2148_diayn_gher_HUSK-ANT-S1-DISCRETE-AIR
The agent recognised is: {'name': 'diayn_gher', 'class': 'agent.diayn_gher.DIAYNGHERAgent', 'params': {'obs_dim': '???', 'action_dim': '???', 'action_range': '???', 'skill_dim': 4, 'obs_dim_weights': [1, 1], 'skill_type': 'discrete', 'device': '${device}', 'critic_cfg': '${double_q_critic}', 'actor_cfg': '${diag_gaussian_actor}', 'discriminator_cfg': '${discriminator}', 'discount': 0.99, 'init_temperature': 0.1, 'alpha_lr': 0.0001, 'alpha_betas': [0.9, 0.999], 'actor_lr': 0.0001, 'actor_betas': [0.9, 0.999], 'actor_update_frequency': 1, 'critic_lr': 0.0001, 'critic_betas': [0.9, 0.999], 'critic_tau': 0.005, 'critic_target_update_frequency': 2, 'discriminator_lr': 0.0001, 'discriminator_betas': [0.9, 0.999], 'discriminator_update_frequency': 1, 'batch_size': 1024, 'learnable_temperature': True, 'log_frequency': 10000, 'log_save_tb': True, 'name_env': 'AntEnv', 'max_replay_buffer_size': 5000000.0, 'plotter': 'None', 'render_eval_paths': False, 'use_automatic_entropy_tuning': True}}
AntEnv
DEVICE IS: cuda:0
the number of cpu threads: 2
NUM steps is: 1000
Max path length is: 1000
Num steps: 1000, difference is: 1000
Max path length with this loop is: 1000
Max path length in rollouts is: 1000
NUM EPOCHS IS: 1
NUM steps is: 1000
Max path length is: 1000
Num steps: 1000, difference is: 1000
Max path length with this loop is: 1000
Max path length in rollouts is: 1000
NUM steps is: 1000
Max path length is: 1000
Num steps: 1000, difference is: 1000
Max path length with this loop is: 1000
Max path length in rollouts is: 1000
MAX PATH LENGTH IN BATCH RL is : 1000
IN epoch NUMBER: 0
The paths received for epoch: 0, are: [{'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}]
I am in approx_irl
In approx IRL relabeling
Paths received are: [{'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}]
Len of paths is: 1
Latents calculated are: [tensor([0., 0., 1., 0.], device='cuda:0'), tensor([0., 0., 0., 1.], device='cuda:0'), tensor([0., 0., 1., 0.], device='cuda:0')]
Latents after append is: [tensor([0., 0., 1., 0.], device='cuda:0'), tensor([0., 0., 0., 1.], device='cuda:0'), tensor([0., 0., 1., 0.], device='cuda:0'), array([1.00, 0.00, 0.00, 0.00], dtype=float32)]
I am in cache
I am inside the DIAYNAntDirectionRelabelerSparse Reward Matrix
Length of paths in get_reward_matrix: 1
Latents received in get_Reward_matrix: [tensor([0., 0., 1., 0.], device='cuda:0'), tensor([0., 0., 0., 1.], device='cuda:0'), tensor([0., 0., 1., 0.], device='cuda:0'), array([1.00, 0.00, 0.00, 0.00], dtype=float32)]
I am inside get_discounted_path_reward in rewards.py inside Relabeler
Path and latent received in get_discounted_path_reward: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}, tensor([0., 0., 1., 0.], device='cuda:0')
Latent received in get_discounted_path_Reward: tensor([0., 0., 1., 0.], device='cuda:0')
I am in the correct case from get_path_Reward for the latent: tensor([0., 0., 1., 0.], device='cuda:0')
The path in calcualte Path reward of the DiaynAntRelabeler is: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}
I am in singularSkill
I am inside get_discounted_reward in Relabeler
Multipliers in HUSK [1.00 0.99 0.98 0.97 0.96 0.95 0.94 0.93 0.92 0.91 0.90 0.90 0.89 0.88
 0.87 0.86 0.85 0.84 0.83 0.83 0.82 0.81 0.80 0.79 0.79 0.78 0.77 0.76
 0.75 0.75 0.74 0.73 0.72 0.72 0.71 0.70 0.70 0.69 0.68 0.68 0.67 0.66
 0.66 0.65 0.64 0.64 0.63 0.62 0.62 0.61 0.61 0.60 0.59 0.59 0.58 0.58
 0.57 0.56 0.56 0.55 0.55 0.54 0.54 0.53 0.53 0.52 0.52 0.51 0.50 0.50
 0.49 0.49 0.48 0.48 0.48 0.47 0.47 0.46 0.46 0.45 0.45 0.44 0.44 0.43
 0.43 0.43 0.42 0.42 0.41 0.41 0.40 0.40 0.40 0.39 0.39 0.38 0.38 0.38
 0.37 0.37 0.37 0.36 0.36 0.36 0.35 0.35 0.34 0.34 0.34 0.33 0.33 0.33
 0.32 0.32 0.32 0.31 0.31 0.31 0.31 0.30 0.30 0.30 0.29 0.29 0.29 0.28
 0.28 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.26 0.26 0.25 0.25 0.25 0.25
 0.24 0.24 0.24 0.24 0.24 0.23 0.23 0.23 0.23 0.22 0.22 0.22 0.22 0.21
 0.21 0.21 0.21 0.21 0.20 0.20 0.20 0.20 0.20 0.19 0.19 0.19 0.19 0.19
 0.18 0.18 0.18 0.18 0.18 0.18 0.17 0.17 0.17 0.17 0.17 0.17 0.16 0.16
 0.16 0.16 0.16 0.16 0.15 0.15 0.15 0.15 0.15 0.15 0.15 0.14 0.14 0.14
 0.14 0.14 0.14 0.14 0.13 0.13 0.13 0.13 0.13 0.13 0.13 0.12 0.12 0.12
 0.12 0.12 0.12 0.12 0.12 0.12 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11
 0.11 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.09 0.09 0.09
 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.08 0.08 0.08 0.08 0.08 0.08
 0.08 0.08 0.08 0.08 0.08 0.08 0.07 0.07 0.07 0.07 0.07 0.07 0.07 0.07
 0.07 0.07 0.07 0.07 0.07 0.07 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06
 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.05 0.05 0.05 0.05 0.05
 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05
 0.05 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04
 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00]
The result calculated for HUSK: -87.9592710098674
I am inside get_discounted_path_reward in rewards.py inside Relabeler
Path and latent received in get_discounted_path_reward: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}, tensor([0., 0., 0., 1.], device='cuda:0')
Latent received in get_discounted_path_Reward: tensor([0., 0., 0., 1.], device='cuda:0')
I am in the correct case from get_path_Reward for the latent: tensor([0., 0., 0., 1.], device='cuda:0')
The path in calcualte Path reward of the DiaynAntRelabeler is: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}
I am in singularSkill
I am inside get_discounted_reward in Relabeler
Multipliers in HUSK [1.00 0.99 0.98 0.97 0.96 0.95 0.94 0.93 0.92 0.91 0.90 0.90 0.89 0.88
 0.87 0.86 0.85 0.84 0.83 0.83 0.82 0.81 0.80 0.79 0.79 0.78 0.77 0.76
 0.75 0.75 0.74 0.73 0.72 0.72 0.71 0.70 0.70 0.69 0.68 0.68 0.67 0.66
 0.66 0.65 0.64 0.64 0.63 0.62 0.62 0.61 0.61 0.60 0.59 0.59 0.58 0.58
 0.57 0.56 0.56 0.55 0.55 0.54 0.54 0.53 0.53 0.52 0.52 0.51 0.50 0.50
 0.49 0.49 0.48 0.48 0.48 0.47 0.47 0.46 0.46 0.45 0.45 0.44 0.44 0.43
 0.43 0.43 0.42 0.42 0.41 0.41 0.40 0.40 0.40 0.39 0.39 0.38 0.38 0.38
 0.37 0.37 0.37 0.36 0.36 0.36 0.35 0.35 0.34 0.34 0.34 0.33 0.33 0.33
 0.32 0.32 0.32 0.31 0.31 0.31 0.31 0.30 0.30 0.30 0.29 0.29 0.29 0.28
 0.28 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.26 0.26 0.25 0.25 0.25 0.25
 0.24 0.24 0.24 0.24 0.24 0.23 0.23 0.23 0.23 0.22 0.22 0.22 0.22 0.21
 0.21 0.21 0.21 0.21 0.20 0.20 0.20 0.20 0.20 0.19 0.19 0.19 0.19 0.19
 0.18 0.18 0.18 0.18 0.18 0.18 0.17 0.17 0.17 0.17 0.17 0.17 0.16 0.16
 0.16 0.16 0.16 0.16 0.15 0.15 0.15 0.15 0.15 0.15 0.15 0.14 0.14 0.14
 0.14 0.14 0.14 0.14 0.13 0.13 0.13 0.13 0.13 0.13 0.13 0.12 0.12 0.12
 0.12 0.12 0.12 0.12 0.12 0.12 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11
 0.11 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.09 0.09 0.09
 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.08 0.08 0.08 0.08 0.08 0.08
 0.08 0.08 0.08 0.08 0.08 0.08 0.07 0.07 0.07 0.07 0.07 0.07 0.07 0.07
 0.07 0.07 0.07 0.07 0.07 0.07 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06
 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.05 0.05 0.05 0.05 0.05
 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05
 0.05 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04
 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00]
The result calculated for HUSK: 14.090346933300083
I am inside get_discounted_path_reward in rewards.py inside Relabeler
Path and latent received in get_discounted_path_reward: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}, tensor([0., 0., 1., 0.], device='cuda:0')
Latent received in get_discounted_path_Reward: tensor([0., 0., 1., 0.], device='cuda:0')
I am in the correct case from get_path_Reward for the latent: tensor([0., 0., 1., 0.], device='cuda:0')
The path in calcualte Path reward of the DiaynAntRelabeler is: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}
I am in singularSkill
I am inside get_discounted_reward in Relabeler
Multipliers in HUSK [1.00 0.99 0.98 0.97 0.96 0.95 0.94 0.93 0.92 0.91 0.90 0.90 0.89 0.88
 0.87 0.86 0.85 0.84 0.83 0.83 0.82 0.81 0.80 0.79 0.79 0.78 0.77 0.76
 0.75 0.75 0.74 0.73 0.72 0.72 0.71 0.70 0.70 0.69 0.68 0.68 0.67 0.66
 0.66 0.65 0.64 0.64 0.63 0.62 0.62 0.61 0.61 0.60 0.59 0.59 0.58 0.58
 0.57 0.56 0.56 0.55 0.55 0.54 0.54 0.53 0.53 0.52 0.52 0.51 0.50 0.50
 0.49 0.49 0.48 0.48 0.48 0.47 0.47 0.46 0.46 0.45 0.45 0.44 0.44 0.43
 0.43 0.43 0.42 0.42 0.41 0.41 0.40 0.40 0.40 0.39 0.39 0.38 0.38 0.38
 0.37 0.37 0.37 0.36 0.36 0.36 0.35 0.35 0.34 0.34 0.34 0.33 0.33 0.33
 0.32 0.32 0.32 0.31 0.31 0.31 0.31 0.30 0.30 0.30 0.29 0.29 0.29 0.28
 0.28 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.26 0.26 0.25 0.25 0.25 0.25
 0.24 0.24 0.24 0.24 0.24 0.23 0.23 0.23 0.23 0.22 0.22 0.22 0.22 0.21
 0.21 0.21 0.21 0.21 0.20 0.20 0.20 0.20 0.20 0.19 0.19 0.19 0.19 0.19
 0.18 0.18 0.18 0.18 0.18 0.18 0.17 0.17 0.17 0.17 0.17 0.17 0.16 0.16
 0.16 0.16 0.16 0.16 0.15 0.15 0.15 0.15 0.15 0.15 0.15 0.14 0.14 0.14
 0.14 0.14 0.14 0.14 0.13 0.13 0.13 0.13 0.13 0.13 0.13 0.12 0.12 0.12
 0.12 0.12 0.12 0.12 0.12 0.12 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11
 0.11 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.09 0.09 0.09
 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.08 0.08 0.08 0.08 0.08 0.08
 0.08 0.08 0.08 0.08 0.08 0.08 0.07 0.07 0.07 0.07 0.07 0.07 0.07 0.07
 0.07 0.07 0.07 0.07 0.07 0.07 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06
 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.05 0.05 0.05 0.05 0.05
 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05
 0.05 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04
 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00]
The result calculated for HUSK: -87.9592710098674
I am inside get_discounted_path_reward in rewards.py inside Relabeler
Path and latent received in get_discounted_path_reward: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}, [1.00 0.00 0.00 0.00]
Latent received in get_discounted_path_Reward: [1.00 0.00 0.00 0.00]
I am in the correct case from get_path_Reward for the latent: [1.00 0.00 0.00 0.00]
The path in calcualte Path reward of the DiaynAntRelabeler is: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}
I am in singularSkill
I am inside get_discounted_reward in Relabeler
Multipliers in HUSK [1.00 0.99 0.98 0.97 0.96 0.95 0.94 0.93 0.92 0.91 0.90 0.90 0.89 0.88
 0.87 0.86 0.85 0.84 0.83 0.83 0.82 0.81 0.80 0.79 0.79 0.78 0.77 0.76
 0.75 0.75 0.74 0.73 0.72 0.72 0.71 0.70 0.70 0.69 0.68 0.68 0.67 0.66
 0.66 0.65 0.64 0.64 0.63 0.62 0.62 0.61 0.61 0.60 0.59 0.59 0.58 0.58
 0.57 0.56 0.56 0.55 0.55 0.54 0.54 0.53 0.53 0.52 0.52 0.51 0.50 0.50
 0.49 0.49 0.48 0.48 0.48 0.47 0.47 0.46 0.46 0.45 0.45 0.44 0.44 0.43
 0.43 0.43 0.42 0.42 0.41 0.41 0.40 0.40 0.40 0.39 0.39 0.38 0.38 0.38
 0.37 0.37 0.37 0.36 0.36 0.36 0.35 0.35 0.34 0.34 0.34 0.33 0.33 0.33
 0.32 0.32 0.32 0.31 0.31 0.31 0.31 0.30 0.30 0.30 0.29 0.29 0.29 0.28
 0.28 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.26 0.26 0.25 0.25 0.25 0.25
 0.24 0.24 0.24 0.24 0.24 0.23 0.23 0.23 0.23 0.22 0.22 0.22 0.22 0.21
 0.21 0.21 0.21 0.21 0.20 0.20 0.20 0.20 0.20 0.19 0.19 0.19 0.19 0.19
 0.18 0.18 0.18 0.18 0.18 0.18 0.17 0.17 0.17 0.17 0.17 0.17 0.16 0.16
 0.16 0.16 0.16 0.16 0.15 0.15 0.15 0.15 0.15 0.15 0.15 0.14 0.14 0.14
 0.14 0.14 0.14 0.14 0.13 0.13 0.13 0.13 0.13 0.13 0.13 0.12 0.12 0.12
 0.12 0.12 0.12 0.12 0.12 0.12 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11
 0.11 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.09 0.09 0.09
 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.08 0.08 0.08 0.08 0.08 0.08
 0.08 0.08 0.08 0.08 0.08 0.08 0.07 0.07 0.07 0.07 0.07 0.07 0.07 0.07
 0.07 0.07 0.07 0.07 0.07 0.07 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06
 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.05 0.05 0.05 0.05 0.05
 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05
 0.05 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04
 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00]
The result calculated for HUSK: 217.0740466073299
I am in the no use advantage
I am inside DIAYN, the best_latents are: [array([1.00, 0.00, 0.00, 0.00], dtype=float32)]
I am in the correct case from get_path_Reward for the latent: [1.00 0.00 0.00 0.00]
The path in calcualte Path reward of the DiaynAntRelabeler is: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}
I am in singularSkill
The skill received after IRL relabeleing is: [[array([1.00, 0.00, 0.00, 0.00], dtype=float32)]]
The relabeled latents arE: [[array([1.00, 0.00, 0.00, 0.00], dtype=float32)]]
The original skills are:[[array([1.00, 0.00, 0.00, 0.00], dtype=float32)]]
I am in the correct case from get_path_Reward for the latent: [1.00 0.00 0.00 0.00]
The path in calcualte Path reward of the DiaynAntRelabeler is: {'observations': array([[0.04, 0.03, 0.75, ..., 0.00, 0.00, 0.00],
       [0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'latents': array([tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0'),
       tensor([1., 0., 0., 0.], device='cuda:0')], dtype=object), 'actions': array([[8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       ...,
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00],
       [8.00, 8.00, 8.00, ..., 8.00, 8.00, 8.00]], dtype=float32), 'next_observations': array([[0.04, 0.04, 0.78, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.77, ..., 0.00, 0.00, 0.00],
       [0.04, 0.06, 0.70, ..., 0.00, 0.00, 0.00],
       ...,
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00],
       [0.06, 0.02, 0.51, ..., 0.00, 0.00, 0.00]]), 'rewards': array([[tensor([0.0020], device='cuda:0', grad_fn=<SubBackward0>)],
       [False],
       [tensor([0.0027], device='cuda:0', grad_fn=<SubBackward0>)],
       ...,
       [False],
       [tensor([0.0022], device='cuda:0', grad_fn=<SubBackward0>)],
       [False]], dtype=object), 'qpos': array([], dtype=float64), 'next_qpos': array([], dtype=float64), 'skills': [array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)], 'done_no_max': [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]}
I am in singularSkill
Skills after extend: [[array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)]]
Original Z is: [1.00 0.00 0.00 0.00]
I am inside get_discounted_reward in Relabeler
Multipliers in HUSK [1.00 0.99 0.98 0.97 0.96 0.95 0.94 0.93 0.92 0.91 0.90 0.90 0.89 0.88
 0.87 0.86 0.85 0.84 0.83 0.83 0.82 0.81 0.80 0.79 0.79 0.78 0.77 0.76
 0.75 0.75 0.74 0.73 0.72 0.72 0.71 0.70 0.70 0.69 0.68 0.68 0.67 0.66
 0.66 0.65 0.64 0.64 0.63 0.62 0.62 0.61 0.61 0.60 0.59 0.59 0.58 0.58
 0.57 0.56 0.56 0.55 0.55 0.54 0.54 0.53 0.53 0.52 0.52 0.51 0.50 0.50
 0.49 0.49 0.48 0.48 0.48 0.47 0.47 0.46 0.46 0.45 0.45 0.44 0.44 0.43
 0.43 0.43 0.42 0.42 0.41 0.41 0.40 0.40 0.40 0.39 0.39 0.38 0.38 0.38
 0.37 0.37 0.37 0.36 0.36 0.36 0.35 0.35 0.34 0.34 0.34 0.33 0.33 0.33
 0.32 0.32 0.32 0.31 0.31 0.31 0.31 0.30 0.30 0.30 0.29 0.29 0.29 0.28
 0.28 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.26 0.26 0.25 0.25 0.25 0.25
 0.24 0.24 0.24 0.24 0.24 0.23 0.23 0.23 0.23 0.22 0.22 0.22 0.22 0.21
 0.21 0.21 0.21 0.21 0.20 0.20 0.20 0.20 0.20 0.19 0.19 0.19 0.19 0.19
 0.18 0.18 0.18 0.18 0.18 0.18 0.17 0.17 0.17 0.17 0.17 0.17 0.16 0.16
 0.16 0.16 0.16 0.16 0.15 0.15 0.15 0.15 0.15 0.15 0.15 0.14 0.14 0.14
 0.14 0.14 0.14 0.14 0.13 0.13 0.13 0.13 0.13 0.13 0.13 0.12 0.12 0.12
 0.12 0.12 0.12 0.12 0.12 0.12 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11
 0.11 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.09 0.09 0.09
 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.08 0.08 0.08 0.08 0.08 0.08
 0.08 0.08 0.08 0.08 0.08 0.08 0.07 0.07 0.07 0.07 0.07 0.07 0.07 0.07
 0.07 0.07 0.07 0.07 0.07 0.07 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06
 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.05 0.05 0.05 0.05 0.05
 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05
 0.05 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04
 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00]
The result calculated for HUSK: 217.0740466073299
I am inside get_discounted_reward in Relabeler
Multipliers in HUSK [1.00 0.99 0.98 0.97 0.96 0.95 0.94 0.93 0.92 0.91 0.90 0.90 0.89 0.88
 0.87 0.86 0.85 0.84 0.83 0.83 0.82 0.81 0.80 0.79 0.79 0.78 0.77 0.76
 0.75 0.75 0.74 0.73 0.72 0.72 0.71 0.70 0.70 0.69 0.68 0.68 0.67 0.66
 0.66 0.65 0.64 0.64 0.63 0.62 0.62 0.61 0.61 0.60 0.59 0.59 0.58 0.58
 0.57 0.56 0.56 0.55 0.55 0.54 0.54 0.53 0.53 0.52 0.52 0.51 0.50 0.50
 0.49 0.49 0.48 0.48 0.48 0.47 0.47 0.46 0.46 0.45 0.45 0.44 0.44 0.43
 0.43 0.43 0.42 0.42 0.41 0.41 0.40 0.40 0.40 0.39 0.39 0.38 0.38 0.38
 0.37 0.37 0.37 0.36 0.36 0.36 0.35 0.35 0.34 0.34 0.34 0.33 0.33 0.33
 0.32 0.32 0.32 0.31 0.31 0.31 0.31 0.30 0.30 0.30 0.29 0.29 0.29 0.28
 0.28 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.26 0.26 0.25 0.25 0.25 0.25
 0.24 0.24 0.24 0.24 0.24 0.23 0.23 0.23 0.23 0.22 0.22 0.22 0.22 0.21
 0.21 0.21 0.21 0.21 0.20 0.20 0.20 0.20 0.20 0.19 0.19 0.19 0.19 0.19
 0.18 0.18 0.18 0.18 0.18 0.18 0.17 0.17 0.17 0.17 0.17 0.17 0.16 0.16
 0.16 0.16 0.16 0.16 0.15 0.15 0.15 0.15 0.15 0.15 0.15 0.14 0.14 0.14
 0.14 0.14 0.14 0.14 0.13 0.13 0.13 0.13 0.13 0.13 0.13 0.12 0.12 0.12
 0.12 0.12 0.12 0.12 0.12 0.12 0.11 0.11 0.11 0.11 0.11 0.11 0.11 0.11
 0.11 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.10 0.09 0.09 0.09
 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.09 0.08 0.08 0.08 0.08 0.08 0.08
 0.08 0.08 0.08 0.08 0.08 0.08 0.07 0.07 0.07 0.07 0.07 0.07 0.07 0.07
 0.07 0.07 0.07 0.07 0.07 0.07 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06
 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.05 0.05 0.05 0.05 0.05
 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05
 0.05 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04
 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03 0.03
 0.03 0.03 0.03 0.03 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02
 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01
 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
 0.00 0.00 0.00 0.00 0.00 0.00]
The result calculated for HUSK: 217.0740466073299
Skill list is: [[array([1.00, 0.00, 0.00, 0.00], dtype=float32), array([1.00, 0.00, 0.00, 0.00], dtype=float32)]]
Z added in the loop is: [1.00 0.00 0.00 0.00]
The original skill is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Z added in the loop is: [1.00 0.00 0.00 0.00]
The original skill is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Pure skill received is: [1.00 0.00 0.00 0.00]
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
Num trains per loop is: 100
The self size is in the replay buffer: 2000, the batch size is: 128
The keys of train data is: dict_keys(['observations', 'actions', 'rewards', 'terminals', 'next_observations', 'latents', 'skill', 'not_dones_no_max', 'pureSkill'])
Len of train data is: 128
The sub data is: [[1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]
 [1.00 0.00 0.00 0.00]]
I AM INSIDE CORRECT TRAIN FUNCTION IN DIAYN GHER
I AM INSIDE: UPDATE
Skill received is: tensor([[1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.],
        [1., 0., 0., 0.]], device='cuda:0')
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
I AM INSIDE: UPDATE CRITIC
I AM INSIDE: ACTOR AND ALPHA
I AM INSIDE: DISCRIMINATOR
I AM INSIDE SNAPSHOT
Params are : {'trainer/policy': Sequential(
  (0): Linear(in_features=117, out_features=1024, bias=True)
  (1): ReLU(inplace=True)
  (2): Linear(in_features=1024, out_features=1024, bias=True)
  (3): ReLU(inplace=True)
  (4): Linear(in_features=1024, out_features=16, bias=True)
), 'trainer/qf1': Sequential(
  (0): Linear(in_features=125, out_features=1024, bias=True)
  (1): ReLU(inplace=True)
  (2): Linear(in_features=1024, out_features=1024, bias=True)
  (3): ReLU(inplace=True)
  (4): Linear(in_features=1024, out_features=1, bias=True)
), 'trainer/qf2': Sequential(
  (0): Linear(in_features=125, out_features=1024, bias=True)
  (1): ReLU(inplace=True)
  (2): Linear(in_features=1024, out_features=1024, bias=True)
  (3): ReLU(inplace=True)
  (4): Linear(in_features=1024, out_features=1, bias=True)
), 'trainer/target_qf1': Sequential(
  (0): Linear(in_features=125, out_features=1024, bias=True)
  (1): ReLU(inplace=True)
  (2): Linear(in_features=1024, out_features=1024, bias=True)
  (3): ReLU(inplace=True)
  (4): Linear(in_features=1024, out_features=1, bias=True)
), 'trainer/target_qf2': Sequential(
  (0): Linear(in_features=125, out_features=1024, bias=True)
  (1): ReLU(inplace=True)
  (2): Linear(in_features=1024, out_features=1024, bias=True)
  (3): ReLU(inplace=True)
  (4): Linear(in_features=1024, out_features=1, bias=True)
), 'trainer/discriminator': Discriminator(
  (model): Sequential(
    (0): Linear(in_features=2, out_features=1024, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=1024, out_features=1024, bias=True)
    (3): ReLU(inplace=True)
    (4): Linear(in_features=1024, out_features=4, bias=True)
  )
  (criterion): CrossEntropyLoss()
), 'exploration/env': <rlkit.envs.wrappers.NormalizedBoxEnv object at 0x150321d99f28>, 'exploration/policy': Sequential(
  (0): Linear(in_features=117, out_features=1024, bias=True)
  (1): ReLU(inplace=True)
  (2): Linear(in_features=1024, out_features=1024, bias=True)
  (3): ReLU(inplace=True)
  (4): Linear(in_features=1024, out_features=16, bias=True)
), 'evaluation/env': <rlkit.envs.wrappers.NormalizedBoxEnv object at 0x1502a8713d68>, 'evaluation/policy': <rlkit.torch.sac.policies.MakeDeterministicLatentPolicy object at 0x1502a8298cc0>}
SAVE FILE IN: /home/yb1025/Research/GRAIL/HUSK/accelerate-skillDiscovery/generalized-hindsight/rlkit/../data/DIAYN-GHER-ANTENV-SEED1-SEED-1/DIAYN-GHER-ANTENV-SEED1-SEED_1_2022_06_05_21_48_14_0000--s-1/itr_0.pkl
SKILL IF INSTANCE
I am not in singular skill
Skill log prob here look like tensor([[-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863],
        [-1.3863]], device='cuda:0')
